# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # formatting-check:
  #   name: Formatting Check
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       path:
  #         - 'src'
  #         - 'include'
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Run clang-format style check for C/C++/Protobuf programs.
  #     uses: jidicula/clang-format-action@v4.11.0
  #     with:
  #       clang-format-version: '13'
  #       check-path: ${{ matrix.path }}
  #       fallback-style: 'Mozilla'
    # - name: Generate summary
    #   run: echo "{markdown content}" >> $GITHUB_STEP_SUMMARY
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      # - uses: actions/checkout@v2
      # - uses: DoozyX/clang-format-lint-action@v0.16.2
      #   with:
      #     source: '.'
      #     exclude: './third_party ./external'
      #     extensions: 'hpp,h,c,cpp'
      #     clangFormatVersion: 16
      #     style: chromium          
      # - name: clang-format Check
      #   # You may pin to the exact commit or the version.
      #   # uses: jidicula/clang-format-action@f62da5e3d3a2d88ff364771d9d938773a618ab5e
      #   uses: jidicula/clang-format-action@v4.11.0
      #   with:
      #     # The major version of clang-format that you want to use.
      #     clang-format-version: 17 # optional, default is 13
      #     # The path to the directory you want to check for correct C/C++/Protobuf formatting. Default is the full repository.
      #     check-path: src, include # optional, default is .
      #     # A regex to exclude files or directories that should not be checked. Default is empty.
      #     exclude-regex: lib # optional, default is 
      #     # The fallback style for clang-format if no .clang-format file exists in your repository.
      #     fallback-style: llvm # optional, default is llvm
